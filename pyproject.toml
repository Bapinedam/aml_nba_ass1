[tool.poetry]
name = "brayam-pineda-ml"
version = "0.3.1"
description = "Machine Learning package for NBA draft prediction and weather forecasting using LightGBM and XGBoost"
authors = ["Brayam Alexander Pineda <brayam.pineda@student.uts.edu.au>"]
readme = "README.md"
packages = [{include = "brayam_pineda_ml", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8"
scikit-learn = "^1.0.0"
pandas = "^1.3.0,<2.0.0"
numpy = "^1.20.0"
lightgbm = "^3.0.0,<4.0.0"
joblib = "^1.0.0"
xgboost = "^1.5.0"
matplotlib = "^3.5.0"
seaborn = "^0.11.0"
hyperopt = "^0.2.0"
lime = "^0.2.0"
wandb = "^0.12.0"
loguru = "^0.6.0"
tqdm = "^4.60.0"
typer = "^0.4.0"
python-dotenv = "^0.19.0"
requests = "^2.25.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.0.0"
jupyter = "^1.0.0"
jupyterlab = "4.2.3"
ipykernel = "^6.0.0"
notebook = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=brayam_pineda_ml",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "lightgbm.*",
    "hyperopt.*",
    "wandb.*",
    "lime.*",
]
ignore_missing_imports = true